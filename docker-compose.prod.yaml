services:

  # ──────────── Dataroom DB ────────────
  dataroom-db:
    image: postgres:17-alpine
    container_name: vltrn-dataroom-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataroom
    volumes:
      - dataroom-data:/var/lib/postgresql/data
      - ./dataroom-db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ──────────── Scout-Warn Agent ────────────
  scout-warn:
    image: ghcr.io/vltrnone/scout-warn:latest
    container_name: vltrn-scout-warn
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataroom
      POSTGRES_HOST: dataroom-db
      POSTGRES_PORT: 5432
    depends_on:
      dataroom-db:
        condition: service_healthy
    restart: always

  # ──────────── Marketer-Agent ────────────
  marketer-agent:
    image: ghcr.io/vltrnone/marketer-agent:latest
    container_name: vltrn-marketer-agent
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataroom
      POSTGRES_HOST: dataroom-db
      POSTGRES_PORT: 5432
    depends_on:
      dataroom-db:
        condition: service_healthy
    restart: always

  # ──────────── Intent-Parser & Orchestrator ────────────
  intent-parser:
    image: ghcr.io/vltrnone/intent-parser:latest
    container_name: vltrn-intent-parser
    ports:
      - "4000:4000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataroom
      POSTGRES_HOST: dataroom-db
      POSTGRES_PORT: 5432
      API_PORT: 4000
      API_HOST: 0.0.0.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      dataroom-db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  # ──────────── Redis for BullMQ ────────────
  redis:
    image: redis:7-alpine
    container_name: vltrn-redis
    restart: always

volumes:
  dataroom-data: 