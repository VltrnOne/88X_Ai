services:

  # ──────────── Dataroom DB ────────────
  dataroom-db:
    image: postgres:16
    container_name: vltrn-dataroom-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataroom
    volumes:
      - dataroom-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ──────────── Scout-Warn Agent ────────────
  scout-warn:
    build:
      context: ./agents/scout-warn
      dockerfile: Dockerfile
    image: vltrn/scout-warn:1.0.0
    container_name: vltrn-scout-warn
    env_file:
      - .env
    depends_on:
      dataroom-db:
        condition: service_healthy
    command: npm start

  # ──────────── Marketer-Agent ────────────
  marketer-agent:
    build:
      context: ./agents/marketer-agent
      dockerfile: Dockerfile
    image: vltrn/marketer-agent:1.0.0
    container_name: vltrn-marketer-agent
    env_file:
      - .env
    depends_on:
      dataroom-db:
        condition: service_healthy
    command: npm start

  # ──────────── Intent-Parser & Orchestrator ────────────
  intent-parser:
    build:
      context: ./agents/intent-parser
      dockerfile: Dockerfile
    image: vltrn/intent-parser:1.0.0
    container_name: vltrn-intent-parser
    ports:
      - "4000:4000"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      dataroom-db:
        condition: service_healthy
      redis:
        condition: service_started
    command: npm start

  # ──────────── Redis for BullMQ ────────────
  redis:
    image: redis:7-alpine
    container_name: vltrn-redis
    ports:
      - "6379:6379"
    restart: always

volumes:
  dataroom-data:
